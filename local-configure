#!/bin/bash

################################################################################
#
# Generate local build script.
#
################################################################################

# Trace all commands.
set -x
# Fail the build on any error.
set -e

# Enable aliases below.
shopt -s expand_aliases

# Use typical macOS aliases.
which -s gsed && alias sed=gsed || true

WORKDIR=build

# Use RegExp magic to convert Dockerfile to shell script for locale execution.
# VGA qxl is not available in qemu if it is running on macOS host, so use std for here.
cat << EOF > local-build
#!/bin/bash

################################################################################
#
# Build QEMU system image locally on the host and use it for Docker image base.
#
# This script accepts these environment variables:
#
# PRODUCT_KEY - Windows XP SP3 Corporate Product Key (required)
# IE_VERSION  - Internet Explorer version: 6 (default), 7 or 8
# VNC_PORT    - VNC port (5900 by default)
#
# After completion:
#
# cp -v Dockerfile.local build/Dockerfile
# cd build && docker build -t sormy/oldie:{IE_VERSION} . && cd -
#
################################################################################

# Trace all commands.
set -x
# Fail the build on any error.
set -e

# Enable aliases below.
shopt -s expand_aliases

# Use typical macOS aliases.
which -s gsed && alias sed=gsed || true
which -s grealpath && alias realpath=grealpath || true
which -s gsha256sum && alias sha256sum=gsha256sum || true
which -s mkisofs && alias genisoimage=mkisofs || true

# Clear the build folder.
rm -rf build

# Code below is autogenerated from Docker file.
EOF

cat Dockerfile \
  | sed -e 's!^RUN !!g' \
        -e 's!^FROM !# \0!g' \
        -e 's!^LABEL !# \0!g' \
        -e 's!^\(ARG\|ENV\) \(.*\)=\(.*\)$!\2=${\2-\3}!g' \
        -e 's!^ENV !# \0!g' \
        -e 's!^ARG !# \0!g' \
        -e 's!^ENTRYPOINT !# \0!g' \
        -e 's!^ADD !cp -f ../!g' \
        -e 's!/opt/qemu!.!g' \
        -e 's!^WORKDIR \(.*\)$!mkdir -p build \&\& cd build!g' \
        -e 's!apt-get!echo \0!g' \
        -e 's!rm -rf /!echo \0!g' \
        -e '/^qemu-img create.*$/a if which -s vncviewer; then (sleep 5; vncviewer localhost:$VNC_PORT) & fi' \
  >> local-build

chmod +x local-build
